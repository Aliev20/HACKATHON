version: '3.2'

volumes:
  local_postgres14_data: {}
  local_postgres14_data_backups: {}
  redisdata:


services:

  nginx:
    build:
      context: .
      dockerfile: ./compose/nginx/Dockerfile
    restart: always
    volumes:
      - ./compose/nginx/config:/etc/nginx/conf.d
      - ./compose/nginx/log:/var/log/nginx
      - ./backend:/backend
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - djangonetwork

  web:
    build:
      context: .
      dockerfile: compose/django/Dockerfile
    image: comexpert_django
    container_name: comexpert_django
    restart: always
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/backend
    expose:
      - "8000"
    links:
      - redis
      - rabbit
    env_file:
      - ./.envs/.django
    networks:
      - djangonetwork
  
  postgres:
    build:
      context: .
      dockerfile: compose/postgres14/Dockerfile
    restart: always  
    env_file:
      - ./.envs/.postgres
    volumes:
      - local_postgres14_data:/var/lib/postgresql/data
      - local_postgres14_data_backups:/backups
    networks:
      - djangonetwork

  redis:
    image: redis:alpine
    restart: always
    environment:
     - REDIS_REPLICATION_MODE=master
    expose:
      - "6379"
    networks:
      - djangonetwork
    volumes:
      - 'redisdata:/data'  
  
  rabbit:
    restart: always
    image: "rabbitmq:3-management"
    volumes:
      - ./compose/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - djangonetwork

networks:
  djangonetwork:
    driver: bridge
